// Generated by CoffeeScript 1.10.0
(function() {
  var db;

  db = require('./db')(__dirname + "/../db/metrics");

  module.exports = {

    /*
      get()
      -----
      Returns some hard coded metrics
     */
    get: function(username, callback) {
      var metric, metrics, rs;
      metrics = [];
      metric = [];
      rs = db.createReadStream({
        gte: "metrics:" + username + ":1",
        lte: "metrics:" + username + ":999999999999"
      });
      rs.on('data', function(data) {
        var value;
        value = data.value.split(":");
        metric.push({
          timestamp: parseInt(value[1]),
          value: parseInt(value[2])
        });
        return metric;
      });
      rs.on('error', callback);
      return rs.on('close', function() {
        return callback(null, metric);
      });
    },
    save: function(user, m, callback) {
      var i, index, len, metric, timestamp, value, ws;
      ws = db.createWriteStream();
      ws.on('error', callback);
      ws.on('close', callback);
      for (index = i = 0, len = m.length; i < len; index = ++i) {
        metric = m[index];
        timestamp = metric.timestamp, value = metric.value;
        ws.write({
          key: "metrics:" + user + ":" + (index + 1),
          value: "metrics:" + timestamp + ":" + value
        });
      }
      console.log("Batch saved !");
      return ws.end();
    },
    saveNew: function(user, timestamp, value, callback) {
      return this.get(user, function(err, data) {
        var ws;
        console.log(value);
        ws = db.createWriteStream();
        ws.on('error', callback);
        ws.on('close', callback);
        ws.write({
          key: "metrics:" + user + ":" + (data.length + 1),
          value: "metrics:" + timestamp + ":" + value
        });
        console.log("New user metric saved !");
        return ws.end();
      });

      /*
        remove(id, metrics, cb)
        --------------------
        Remove some metrics with a given id
      
        Parameters:
       */
    }
  };

}).call(this);
